---

- hosts: beservers
  become: true
  become_user: root

  vars:
    frontendserver_address: 1.1.1.1 #Dummy var, will be set by vagrant script
    username: _
    passwd: _

# Python 2.7.15rc1 Available on default box
# Python 3.6.7  Available on default box

  tasks:

    #############################
### User en ssh settings
############################

    #Create user
    - name: Creating user "{{username}}" with admin access
      user:
        name: "{{username}}"
        password: "{{ passwd | password_hash('sha512') }}"
        groups: adm
        append: yes
        shell: /bin/bash

    - name: Add user "{{username}}" to the sudoers
      copy:
        dest: "/etc/sudoers.d/{{username}}"
        content: "{{username}}  ALL=(ALL)  NOPASSWD: ALL"

    - name: Deploy SSH Key
      authorized_key: user={{username}}
                      key="{{ lookup('file', '/Users/{{username}}/.ssh/id_rsa.pub') }}"
                      state=present

    - name: Disable Password Authentication
      lineinfile:
           dest=/etc/ssh/sshd_config
           regexp='^PasswordAuthentication'
           line="PasswordAuthentication no"
           state=present
           backup=yes
    - name: Disable Root Login
      lineinfile:
           dest=/etc/ssh/sshd_config
           regexp='^PermitRootLogin'
           line="PermitRootLogin no"
           state=present
           backup=yes
      notify:
        - restart ssh


    - name: install pip
      apt:
        name: python-pip

    - name: install Flask
      pip:
        name: Flask

    - name: install gunicorn
      apt:
        name: gunicorn

    - name: install node
      apt:
        name: nodejs

    - name: install npm
      apt:
        name: npm

    - name: Also, letâ€™s install build-essential package, which is needed for Node to work properly
      apt:
        name: build-essential

    - name: install React
      npm:
        name: create-react-app
        global: yes

    # Install firewall & configure
    # UFW already inslalled in source-box (default disabled)
    - name: Set ufw logging
      ufw:
        logging: on

    - name: Allow Incoming OpenSSH
      ufw:
        rule: allow
        name: OpenSSH
        direction: in

    - name: Allow Incoming port 22
      ufw:
        rule: allow
        port: 22
        direction: in
        state: enabled

    - name: Allow Incoming port 2222
      ufw:
        rule: allow
        port: 2222
        direction: in
        state: enabled

    - name: Allow Incoming www only from lb_server_address
      ufw:
        rule: allow
        port: 80
        direction: in
        src: "{{frontendserver_address}}"
        state: enabled
        delete: yes

    - name: Allow Incoming www only from lb_server_address
      ufw:
        rule: allow
        port: 80
        direction: in
        #src: "{{frontendserver_address}}"
        state: enabled

    - name: Allow all outgoing (Don't yet enable ufw)
      ufw:
        policy: allow
        direction: outgoing

    - name: Deny all incomming (enable ufw)
      ufw:
        state: enabled
        policy: deny
        direction: incoming

  handlers:
    - name: restart ssh
      service:
          name: sshd
          state: restarted
